<?xml version="1.0" ?>
<robot name="b00885866Bot" xmlns:xacro="https://www.ros.org/wiki/xacro" >

	<xacro:include filename="/media/sf_ubuntu/sample/com760_cw2/src/com760_b00885866/urdf/materials.xacro" />

	<xacro:include filename="/media/sf_ubuntu/sample/com760_cw2/src/com760_b00885866/urdf/b00885866Bot.gazebo" />

	<xacro:include filename="/media/sf_ubuntu/sample/com760_cw2/src/com760_b00885866/urdf/macros.xacro" />

  <!--Create a robot chassis as Base Link -->
  <link name="base_link_chassis">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.5 0.3 0.07"/>
      </geometry>
      <material name="black">
        <color rgba="1.0 0.0 0.0 1.0"/>
      </material>
    </visual>

    <!-- pose and inertial -->
    <pose>0 0 0.1 0 0 0</pose>
    
    <inertial>
      <mass value="5"/>
      <origin rpy="0 0 0" xyz="0 0 0.1"/>
      <inertia ixx="0.0395416666667" ixy="0" ixz="0" iyy="0.106208333333" iyz="0" izz="0.106208333333"/>
    </inertial>
    
    <collision>
      <geometry>
        <box size="0.5 0.3 0.07"/>
      </geometry>
    </collision>
   
    <!-- caster front -->
    <visual name="caster_visual">
      <origin rpy=" 0 0 0" xyz="0.2 0 -0.05"/>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
      <material name="white">
        <color rgba="1.0 1.0 1.0 1.0"/>
      </material> 
    </visual>
    <collision name="caster_collision">
      <origin rpy=" 0 0 0" xyz="0.35 0 -0.05"/>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
    </collision>
    <inertial>
        <mass value="0.5"/>
        <inertia ixx="0.0005" ixy="0.0" ixz="0.0" iyy="0.0005" iyz="0.0" izz="0.0005"/>
      </inertial>  
  </link>

<xacro:wheel name="right_wheel" />
<xacro:wheel_hinge name="right_wheel_hinge" child="right_wheel" origin_xyz="-0.05 0.15 0" />

<xacro:wheel name="left_wheel" />
<xacro:wheel_hinge name="left_wheel_hinge" child="left_wheel" origin_xyz="-0.05 -0.15 0" />

    <!-- Add a laser scan sensor cylindrical in shape to our robots urdf model-->
    <!-- first create a link representing the sensor-->
     <link name="laser_sensor">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <cylinder radius="0.05" length="0.1"/>
        </geometry>
        <material name="white">
          <color rgba="1.0 1.0 1.0 1.0"/>
        </material>
      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="0.05" length="0.1"/>
        </geometry>
      </collision>

      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <mass value="1" />
        <inertia ixx="0.0015" ixy="0" ixz="0" iyy="0.0015" iyz="0" izz="0.0012"/>
      </inertial>
    </link>

    <!--Add a joint element to our robot. This will connect the sensor to robot body rigidly.-->
     <joint name="joint_sensor_laser" type="fixed">
        <origin xyz="0.15 0 0.05" rpy="0 0 0"/>
        <parent link="base_link"/>
        <child link="laser_sensor"/>
     </joint>

    <!--To add the sensor beharior to the link, we use the laser gazebo plugin-->
    <gazebo reference="laser_sensor">
      <sensor type="ray" name="head_hokuyo_sensor">
        <pose>0 0 0 0 0 0</pose>
        <visualize>true</visualize>
        <update_rate>20</update_rate> <!--Update rate : Controls how often (how fast) the laser data is captured-->
        <ray>
          <scan>
            <horizontal>
              <samples>720</samples><!--samples : Defines how how many readings are contained in one scan-->
              <resolution>1</resolution><!--resolution : Defines the minimum angular distance between readings captured in a laser scan-->
              <min_angle>-1.570796</min_angle>
              <max_angle>1.570796</max_angle>
            </horizontal>
          </scan>
          <range><!--range : Defines the minimum sense distance and maximum sense distance-->
            <min>0.10</min>
            <max>10.0</max>
            <resolution>0.01</resolution><!--It defines the minimum distance between 2 points such that two points can be resolved as two separate points.-->
          </range>
          <noise><!--noise : This parameter lets us add gaussian noise to the range data captured by the sensor-->
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
          <topicName>/b00885866Bot/laser/scan</topicName><!--topicName : Defines the name which is used for publishing the laser data-->
          <frameName>laser_sensor</frameName><!--frameName : Defines the link to which the plugin has to be applied-->
        </plugin>
      </sensor>
    </gazebo>

</robot>
